;; Auto-generated. Do not edit!


(when (boundp 'kortex_driver::FollowCartesianTrajectoryResult)
  (if (not (find-package "KORTEX_DRIVER"))
    (make-package "KORTEX_DRIVER"))
  (shadow 'FollowCartesianTrajectoryResult (find-package "KORTEX_DRIVER")))
(unless (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT")
  (make-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))

(in-package "ROS")
;;//! \htmlinclude FollowCartesianTrajectoryResult.msg.html


(intern "*SUCCESSFUL*" (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(shadow '*SUCCESSFUL* (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(defconstant kortex_driver::FollowCartesianTrajectoryResult::*SUCCESSFUL* 0)
(intern "*INVALID_GOAL*" (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(shadow '*INVALID_GOAL* (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(defconstant kortex_driver::FollowCartesianTrajectoryResult::*INVALID_GOAL* -1)
(intern "*PATH_TOLERANCE_VIOLATED*" (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(shadow '*PATH_TOLERANCE_VIOLATED* (find-package "KORTEX_DRIVER::FOLLOWCARTESIANTRAJECTORYRESULT"))
(defconstant kortex_driver::FollowCartesianTrajectoryResult::*PATH_TOLERANCE_VIOLATED* -2)
(defclass kortex_driver::FollowCartesianTrajectoryResult
  :super ros::object
  :slots (_error_string _error_code ))

(defmethod kortex_driver::FollowCartesianTrajectoryResult
  (:init
   (&key
    ((:error_string __error_string) "")
    ((:error_code __error_code) 0)
    )
   (send-super :init)
   (setq _error_string (string __error_string))
   (setq _error_code (round __error_code))
   self)
  (:error_string
   (&optional __error_string)
   (if __error_string (setq _error_string __error_string)) _error_string)
  (:error_code
   (&optional __error_code)
   (if __error_code (setq _error_code __error_code)) _error_code)
  (:serialization-length
   ()
   (+
    ;; string _error_string
    4 (length _error_string)
    ;; int32 _error_code
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _error_string
       (write-long (length _error_string) s) (princ _error_string s)
     ;; int32 _error_code
       (write-long _error_code s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _error_string
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _error_string (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; int32 _error_code
     (setq _error_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get kortex_driver::FollowCartesianTrajectoryResult :md5sum-) "e845eb53c49e5687cc804e4383078872")
(setf (get kortex_driver::FollowCartesianTrajectoryResult :datatype-) "kortex_driver/FollowCartesianTrajectoryResult")
(setf (get kortex_driver::FollowCartesianTrajectoryResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
string error_string
int32 error_code
int32 SUCCESSFUL = 0
int32 INVALID_GOAL = -1
int32 PATH_TOLERANCE_VIOLATED = -2


")



(provide :kortex_driver/FollowCartesianTrajectoryResult "e845eb53c49e5687cc804e4383078872")



// Generated by gencpp from file kortex_driver/ComputeForwardKinematics.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_COMPUTEFORWARDKINEMATICS_H
#define KORTEX_DRIVER_MESSAGE_COMPUTEFORWARDKINEMATICS_H

#include <ros/service_traits.h>


#include <kortex_driver/ComputeForwardKinematicsRequest.h>
#include <kortex_driver/ComputeForwardKinematicsResponse.h>


namespace kortex_driver
{

struct ComputeForwardKinematics
{

typedef ComputeForwardKinematicsRequest Request;
typedef ComputeForwardKinematicsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ComputeForwardKinematics
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ComputeForwardKinematics > {
  static const char* value()
  {
    return "2406133d7d6bcd723f8f11457d1f2636";
  }

  static const char* value(const ::kortex_driver::ComputeForwardKinematics&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ComputeForwardKinematics > {
  static const char* value()
  {
    return "kortex_driver/ComputeForwardKinematics";
  }

  static const char* value(const ::kortex_driver::ComputeForwardKinematics&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ComputeForwardKinematicsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ComputeForwardKinematics >
template<>
struct MD5Sum< ::kortex_driver::ComputeForwardKinematicsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ComputeForwardKinematics >::value();
  }
  static const char* value(const ::kortex_driver::ComputeForwardKinematicsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ComputeForwardKinematicsRequest> should match
// service_traits::DataType< ::kortex_driver::ComputeForwardKinematics >
template<>
struct DataType< ::kortex_driver::ComputeForwardKinematicsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ComputeForwardKinematics >::value();
  }
  static const char* value(const ::kortex_driver::ComputeForwardKinematicsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ComputeForwardKinematicsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ComputeForwardKinematics >
template<>
struct MD5Sum< ::kortex_driver::ComputeForwardKinematicsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ComputeForwardKinematics >::value();
  }
  static const char* value(const ::kortex_driver::ComputeForwardKinematicsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ComputeForwardKinematicsResponse> should match
// service_traits::DataType< ::kortex_driver::ComputeForwardKinematics >
template<>
struct DataType< ::kortex_driver::ComputeForwardKinematicsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ComputeForwardKinematics >::value();
  }
  static const char* value(const ::kortex_driver::ComputeForwardKinematicsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_COMPUTEFORWARDKINEMATICS_H

// Generated by gencpp from file kortex_driver/ReadAction.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READACTION_H
#define KORTEX_DRIVER_MESSAGE_READACTION_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadActionRequest.h>
#include <kortex_driver/ReadActionResponse.h>


namespace kortex_driver
{

struct ReadAction
{

typedef ReadActionRequest Request;
typedef ReadActionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadAction
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadAction > {
  static const char* value()
  {
    return "f8c872d694898f268b63b15c75aa1680";
  }

  static const char* value(const ::kortex_driver::ReadAction&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadAction > {
  static const char* value()
  {
    return "kortex_driver/ReadAction";
  }

  static const char* value(const ::kortex_driver::ReadAction&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadActionRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAction >
template<>
struct MD5Sum< ::kortex_driver::ReadActionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAction >::value();
  }
  static const char* value(const ::kortex_driver::ReadActionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadActionRequest> should match
// service_traits::DataType< ::kortex_driver::ReadAction >
template<>
struct DataType< ::kortex_driver::ReadActionRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAction >::value();
  }
  static const char* value(const ::kortex_driver::ReadActionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadActionResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAction >
template<>
struct MD5Sum< ::kortex_driver::ReadActionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAction >::value();
  }
  static const char* value(const ::kortex_driver::ReadActionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadActionResponse> should match
// service_traits::DataType< ::kortex_driver::ReadAction >
template<>
struct DataType< ::kortex_driver::ReadActionResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAction >::value();
  }
  static const char* value(const ::kortex_driver::ReadActionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READACTION_H
